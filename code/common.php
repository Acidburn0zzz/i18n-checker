<?php require("code/message.php");$conf = parse_ini_file('conf/i18n.conf');$_REQUEST['messages'] = array();$messages = &$_REQUEST['messages'];$languages = getListOfAvailableLanguages();$lang = resolveLanguage();$language = loadLanguage($lang);$baseUri = $conf['base_uri'];function getListOfAvailableLanguages() {	$langFiles = scandir('languages');		foreach ($langFiles as $fileName) {		if ($fileName != "." && $fileName != "..") {			$langCode = preg_split('/\./', $fileName);			$languages[$langCode[0]] = Locale::getDisplayLanguage($langCode[0], $langCode[0]);		}	}	return $languages;}function resolveLanguage() {	global $conf, $languages;	if (isset($_REQUEST['lang'])) {		if (array_key_exists($_REQUEST['lang'], $languages)) {			return $_REQUEST['lang'];		} else {			$_REQUEST['messages'][] = new Message(Message::error, "requested_language_not_available");			return $conf['default_language'];		}	} else {		return $conf['default_language'];	}}function loadLanguage($lang) {	global $conf;	$language = parse_ini_file('languages/'.$lang.'.properties');	if ($lang != $conf['default_language']) {		$defaultLanguage = parse_ini_file('languages/'.$conf['default_language'].'.properties');		foreach ($defaultLanguage as $i => $str) {			if (!isset($language[$i]))				$language[$i] = $defaultLanguage[$i];		}	}	return $language;}function _lang($str) {	global $language;	if (isset($language[$str])) {		print $language[$str];	} else {		print "[[[".$str."]]]";	}}